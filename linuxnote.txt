Notes on Linux:
# LINUX COMMANDS:

- tail: read the content of a file frm the last bottom. i.e tail -3 txt - reads the last 3 lines
- head: read the content of a file from the upper top. i.e head -3 txt - reads the first 3 lines 
- which: reveals the location of a command is stored (locate a command)
- info: reveals the information of a command
- cd: to change directory; cp or cp ~ - to the home directory; cp / - to the root directory
- mkdir: to create a new directory
- man:  reveal information of a command. Quite similar to the info command
- pwd: this command prints the working directory
- rm: remove a directory. using "rm --help or man rm" will bring several flags for the command
- cp: copy from a directory to another
- mv: mv a file from a directory to another; it also renames a file
- echo: output a content
- ls: a command for listing contents of a directory. using ls -r - reverse the order (sorting) of the content; using ls *.txt - will list every files ending with .txt extension; ls -d */ - will list only directories
- you can use the Ctrl + R + "search term" to find quickly find previously used command
- df: The df command stands for "disk-free" and shows available and used disk space on the linux system. df -h shows the disk space info in human readable format.
- free: the free shows the available  memory ram information on the system. free -h also shows the info in human readable form.

#TREE STRUCTURE ON LINUX

- mkdir with flag (-p) will create several nested directories.
	using tree command (after installing) will show the tree structure of a directory
	
	"sudo apt install tree" - will install tree
	
	tree -a (list hidden files in the tree)
	tree -d (list only directories in the tree)
	......'
- bin => usr/bin - directory referring to binary files in the linux
- lib => usr/lib / usr/lib32/ usr/lib64/ usr/libx32 - are referred to as libraries that help to runs specific programs.
- lost+found: It's a special directory that contains data that has become obsolete. Can be used to recover lost files.
- opt: a directory showing your custom application. Example, you'll find a VBox application in this folder
- proc: The /proc directory is a virtual filesystem that provides information about the system's processes and kernel.
- root: The root directory (/) is the mother of all files and directories of the Linux system. 
- boot: The boot directory hosts all the boot files for your linux operating system. It's  a don'touch directory except you know what you're doing.
- dev: Your device directory
- etc: The directory holding configuration files
- run: The run directory is the mount point for tempfs filesystem in the computer memory. Temporary data used by memory are kept there.
- sbin: Sbin directory stores the binaries required by the operating system for system management.
- snap: The /snap directory is, by default, where the files and folders from installed snap packages appear on your system. i.e. snap install tree
- swapfile: the directory holds: swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive pages in memory are moved to the swap space.
- srv: The term srv stands for service. The /srv directory contains site-specific data for your Linux distribution.
- var: /var is a standard directory that stands for "variable files.
- sys: /sys/class` is a directory in the Linux filesystem that provides a way to interact with the kernel and access information about various classes of devices and subsystems.
- usr: A very important directory that comprises libraries, binaries, and documentation for installed software applications. 

# OTHER COMMANDS TO USE IN THE LINUX FILE SYSTEM
- wget/curl: Wget is a command used to download files. It retrieves files using HTTP, HTTPS, and FTP protocols and is useful for downloads in unstable networks. use curl url --output "filename.ext"
- diff: diff command shows the difference between two files.
- vim/nano: the command helps to open and edit files using vim / nano respectively
- useradd: A command used to add a user 
- adduser: Used to create a new user. It also prompts you to enter password and other details for the new user immediately, unlike the useradd command.
- passwd: A command used to set password to a user
- userdel / deluser: Delete a user account and related files. sudo deluser --remove-all-files user_name 
- grep: Grep command is used to return. i.e. cat mytext.txt | grep es - will return contents with es; ls grep 01 will return files or directory with 01
- history: Bring back all the commands you've been using. You can also use a reverse search by typing Ctrl + R


# LINUX INODE (/df -i | /ls -i | /stat | /chmod | /In)
- stat: running: stat filename will reveal the metadata of the file


# LINUX - FILE PERMISSIONS

File Permissions and Access Rights
Understanding how to manage file permissions and ownership is crucial in Linux. This knowledge empowers you to control access to files and directories, ensuring the security and
integrity of your systenm Let's explore some essential commands and concepts related to file permissions and ownership.
In Linux, managing file permissions and ownership is vital for controlling who can access, modify, or execute files and directories. Understanding these concepts allows you to maintain
the security and integrity of your system, Let's delve into the key commands and concepts related to file permissions and ownership.
Numeric Representation of Permissions
In Linux, permissions are represented using numeric values. Each permission (no permission, read, write, and execute) is assigned a numeric value:
no permissions = O
read = 4
write = 2, and

These values are combined to represent the permissions for each user class. Lets consider a few examples.
Permissions Represented by 7
(read) + 2 (write) + 1 (execute) = 7
Symbolic: rwx
Meaning: Read, write, and execute permissions are all granted.
Example Context: A script file that the owner needs to read, modify, and execute.
Permissions Represented by 5
(read) + 1 (execute) = 5
Symbolic: r-x
Meaning: Read and execute permissions are granted, but write permission is not.
Example Context: A shared library or a command tool that users can execute and read but not modify.
Permissions Represented by 6
(read) + 2 (write) = 6
Symbolic: rw-
Meaning: Read and write permissions are granted, but execute permission is not.
Example Context: A document or a configuration file that the owner needs to read and modify but not execute.


Shorthand Representation of Permissions* *
In addition to the numeric way of showing permissions, Linux also has a shorthand, or symbolic, method for representing file permissions.
Understanding User Classes from a Permissions Perspective
Before diving into shorthand permissions, it's important to understand the concept of "user classes" in the context of Linux permissions. Think of user classes as categories of users that
Linux recognizes when deciding who can do what with a file. There are three main classes:
Owner: The person who created the file. Often referred to as 'user'.
Group: A collection of users who share certain permissions for the file.
Others: Anyone else who has access to the computer but doesn't fall into the first two categories.
The Role of Hyphens (-) in Permission Representation
When discussing permissions, you might notice hyphens (-) being mentioned. In the context of Linux file permissions, a hyphen doesn't actually represent a user class. Instead, it's
used in the symbolic representation of permissions to show the absence of a permission.
Lets get a bit practical with examples. Get onto your Linux terminal and run Is -latr

❯ ls -latr
total 24
-rw-r--r--   1 dare  staff  6332 Jan 29 22:44 README.md
drwxr-xr-x   7 dare  staff   224 Feb  4 11:56 Hands-On-Projects
drwxr-xr-x   8 dare  staff   256 Feb  4 11:56 .
-rwxr-xr-x   1 dare  staff   133 Feb  4 11:56 sync_img_to_s3.sh
drwxr-xr-x  37 dare  staff  1184 Feb  4 12:52 image
drwxr-xr-x   8 dare  staff   256 Feb  4 13:52 Quizzes
drwxr-xr-x   5 dare  staff   160 Feb  5 09:28 ..
drwxr-xr-x  15 dare  staff   480 Feb  6 21:34 .git


Let's break it down to understand what each part means:
In the output above, you will notice that some of the first character can be a - or d d means it's a directory, - means it's a file.
The next three characters (rwx) show the permissions for the owner. r stands for read, w for write, and x for execute.
If a permission is not granted, you'll see a - in its place (e.g., r-x means read and execute permissions are granted, but write permission is not).

The hyphen separates, owner, group, and others
The following three characters after the owner's permissions represent the group's permissions, using the same r, w, and x notation.
The last three characters show the permissions for others.
The order the user class is represented is as follow;
The first hyphen " "
- is the user
The second hyphen "-" is the group
The third hyphen "-" is others


# LINUX TERMINAL FILE DESCRIPTORS AND REDIRECTIONS
A file descriptor (FD, less frequently fildes) is a process-unique identifier (handle) for a file or other input/output resource, such as a pipe or network socket. Here are the three file descriptors:
	1. Standard In		stdin	0	Input from the keyboard
	2. Standard Out		stdout	1	Output to the console
	3. Standard Error	stderr	2	Error output to the console
	
Redirections: Redirection allows commands' file handles to be duplicated, opened, closed, made to refer to different files, and can change the files the command reads from and writes to. Redirection may also be used to modify file handles in the current shell execution environment.
	"find ./ -name newfile 2> stderr.txt" - It will redirect the error (stderr (2) - one of the 3 file descriptor) into the stderr.txt file and print to console the file path of the newfile.

- ps: The Process Status (ps) command in Linux is a powerful tool that allows you to view information about the processes running on your Linux system. We can also use the top or htop (after installing) to check all the processes running on the linux system.
	The ps -p <PID> command is pretty straightforward to get the process information of a PID. 
	The pwdx <PID> command will reveal the process file path
	
- lsof: lsof command stands for "List Open Files". This command provides a list of files that are opened. Basically, it gives the information to find out the files which are opened by which process. 	


# LINUX TERMINAL - USER GROUPS AND PERMISSIONS
- groupadd: command let you create a group which you can add any user into
	groupadd "group_name"
- groupdel: command to delete a groupd
	groupdel "group_name"
	
- usermod: the command let you modify the details of a user. I.e, 
	usermod -a -G "group_name" "user" - will add the user to the group without removing the user from any existing group (because of the -G flag)



Some QUESTIONS/ANSWERS:

What command installs software on a Red Hat/Fedora-based system?
Ans => dnf install
 
What command is used to update the package lists on a Debian-based Linux system?
Ans => apt update 

How would you uninstall a software package on a Red Hat/Fedora-based system using the package manager?
Ans => yum remove package-name
 
Which command is used to clean the package cache on a Debian/Ubuntu system?
Ans => clean apt-cache

To upgrade all installed packages on a Debian-based system, which command would you use?
Ans => apt-get dist-upgrade


To list files in a directory, which command would you use?
Ans => ls

How do you navigate to the home directory of the current user?
Ans => cd ~ or cd

Which command is used to remove a file in Linux?
Ans => rm

What command is used to create a new directory?
Ans => mkdir

How do you display the current working directory in the Linux terminal?
Ans => pwd


To remove read and write permissions for the group and others on a file, what command would you use?
Ans => chmod go-rw file
	g - group
	o - others

What command is used to change the ownership of a file in Linux?
Ans => chown

How would you give read, write, and execute permissions to the owner of a file?
chmod u+rwx file
	owner is the user of the file = u

What command is used to set the sticky bit on a directory?
Ans => chmod 1777

Which command is used to change the group ownership of a file?
Ans =>chgrp


# ADVANCED FILE OPERATIONS
	
	
	
